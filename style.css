/* global */

:root{
    --primaryColor : #f8b800;
}

/* header */

.titre{
    display: flex;
    flex-direction: row;
    justify-content: space-around;
    align-items: center;
    height: 200px;
    margin-bottom: 30px;
}
.titre img{
    width: 300;
}
.titre i{
    color: var(--primaryColor);
}

/* carrousel */

.carrousel{
    position: relative;
    overflow: hidden;
    /* propriété css qui permet de cacher tout ce qui dépasse */

}
.carrousel .images{
    display: flex;
    flex-wrap: nowrap;
    /* empêcher les retour à la ligne */
    flex-direction: row;
    height: 600px;
    transition: transform 0.7s ease-in-out;
}
.slider-Item{
    width: 100%;
    object-fit: cover;
    /* faire en sorte que l'image remplisse tout le container */
    /* en rognant l'image si nécessaire */
    flex-shrink: 0;
    /* 1 par defaut ; empêche la compression de la première image*/
    /* pour pouvoir tout afficher dans le container */
    /* la première image conservera sa taille et les autres seront masquées */
    /* car on a mis la propriété overflow : hidden; */
}
.fleches{
    position: absolute;
    width: 100%;
    padding-left: 10px;
    top : 300px;
    color : var(--primaryColor);
    cursor: pointer;
    /* afficher une main */
}
#droite{
    float: right;
    /* pour envoyer l'élément à droite */
    padding-right: 20px;
    /* obligé de metter 20 car on avait mis un padding-left de 10 */
}

/* navigation */

#toggle-btn{
    display: none;
    /* pour que l'élément ne s'affiche pas */
    position: absolute;
    /* le parent éligible ici c'est le body */
    top : 180px;
    right : 20px;
    cursor: pointer;
}
nav ul{
    position: absolute;
    display: flex;
    flex-direction: row;
    justify-content: space-evenly;
    left: -40px;
    top : 200px;
    width: 100%;
    list-style-type: none;
    /* permet d'enlever les points */
    opacity:1;
    /* 1 est la valeur par defaut */
    transition: opacity 0.5sec ease-in-out;
}
nav ul li{
    margin: 0 20px;
    /* première valeur pour left et la seconde pour right */
    background-color: rgba(112, 112, 128, 0.8);
    /* 0.8 transparence */
    font-size: 16px;
    min-width: 110px;
    height: 45px;
    line-height: 45px;
    /* sert à centrer le texte */
    color : white;
    text-align: center;
    box-shadow: 2px 2px 5px #444;
    cursor: pointer;
    border-radius: 5px 5px 5px 5px;
}

nav ul li:hover{
    background-color: rgba(96, 96, 96, 1);;
}
nav ul li:first-child{
    background-color: var(--primaryColor);
}

/* articles */

.articles{
    display: grid;
    grid-template-columns: repeat(2,1fr );
    grid-template-rows: auto;
    font-size: small;
}
.articles h4,h5{
    font-size: 16px;
}
.un p{
    padding-right: 10px;
}
.deux{
    margin-top: 10px;
    padding: 20px;
    background-color: rgb(128,128,128);
    border-radius: 0px 20px 20px 0px;
    height: 500px;
}
.bouton{
    background-color: var(--primaryColor);
    color: white;
    font-size: 14px;
    padding: 10px 15px;
    /* 10px pour le haut et 15px pour les côtés */
    border-radius: 5px;
    /* ici le 5px s'applique à tous les angles */
    cursor: pointer;
    border-color: white;
}

/* avis */

.temoignages h2{
    font-size: 24px;
    font-weight: bold;
    margin: 20px 0px 40px 0px;
}
.temoignage_card{
    display: grid;
    grid-template-columns: repeat(6,1fr);
    grid-template-rows: auto;
    gap : 15px 20px;
    /* espace avec le haut de 15px et avec les côtés de 20px */
    padding : 20px;
}
.card{
    grid-column: span 2;
    box-shadow: 2px 2px 5px #444;
    padding: 0px 15px;
}
.name{
    font-size: 18px;
    font-weight: bold;
    margin-top: 10px;
}
.card p{
    font-size: 14px;
}
.temoignages button{
    background-color: var(--primaryColor);
    color: white;
    font-size: 14px;
    width: 300px;
    height: 40px;
    margin: 40px auto;
    /* auto ici permet de centrer par rapport à l'axe vertical */
    display: block;
    /* sans ça on ne peut pas utiliser le margin */
    /* display: block transforme l'élément en élément de bloc. 
    L'élément s'insère alors dans le contenu comme une section distincte, 
    avec un saut de ligne avant et après. 
    display: inline, à l'inverse, transforme l'élément en élément en ligne. 
    Ainsi, l'élément qui suit s'affiche sur la même ligne. */
    padding: 10px 15px;
    /* 10px pour le haut et 15px pour les côtés */
    border-radius: 5px;
    /* ici le 5px s'applique à tous les angles */
    cursor: pointer;
    border-color: white;
}

/* footer */

footer{
    height: 50px;
    background-color: #444;
    color: #ccc;
    font-size: 12px;
    text-align: center;
    padding: 20px 100px;
}

/* responsive */
@media screen and (max-width : 900px) {
    #toggle-btn{
        display: block;
    }
    nav ul{
        opacity: 0;
        flex-direction: column;
        width: 250px;
        padding: 0px;
        top : 225px;
        left : calc(50% - 125px);
        /* si on ne fait pas ça l'élement démarre au milieu 
        mais n'est de ce fait pas centré 
        calc pour calcul*/
    }
    .un, .deux{
        grid-column: span 2;
    }
}
@media screen and (max-width : 580px) {
    .titre{
        justify-content: space-between
    }
    .titre h3{
        font-size: 14px;
    }
    .titre img{
        width: 220px;
    }
    .card{
        grid-column: span 3;
    }
}
@media screen and (min-width : 901px) {
    nav ul{
        opacity: 1 !important;
        /* permet d'empêcher le JS de prendre la main */
    }
}